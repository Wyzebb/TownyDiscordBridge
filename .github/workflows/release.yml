name: Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  release:
    name: Publish a release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: 21
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots clean package

      - name: Get Version from POM
        id: version
        run: echo "VERSION=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_ENV

      - name: Fetch latest DEV release number
        id: dev_version
        run: |
          LATEST_DEV=$(gh release list --limit 500 | grep "TDB-${VERSION}+DEV" | awk '{print $1}' | sort -V | tail -n1 | grep -o 'DEV[0-9]*' | grep -o '[0-9]*' || echo "0")
          NEW_DEV=$((LATEST_DEV + 1))
          echo "NEW_VERSION=${VERSION}+${NEW_DEV}" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: true
          release_name: TDB-${{ env.NEW_VERSION }}
          tag_name: "v${{ env.NEW_VERSION }}"
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Java File
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "target/TDB-${{ env.NEW_VERSION }}.jar"
          asset_name: "TDB-${{ env.NEW_VERSION }}.jar"
          asset_content_type: application/java-archive
